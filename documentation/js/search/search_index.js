var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,1.687,1,2.699,2,1.218,3,0.291,4,0.252,5,0.252,6,2.525,7,0.515,8,1.551,9,2.107,10,3.495,11,3.025,12,1.45,13,0.032,14,3.025,15,0.739,16,3.025,17,1.218,18,1.031,19,1.218,20,3.495,21,1.12,22,0.618,23,2.195,24,2.525,25,3.025,26,0.466,27,1.59,28,2.525,29,2.525,30,1.59,31,1.95,32,3.025,33,3.025,34,2.302,35,3.025,36,2.195,37,1.753,38,3.025,39,0.291,40,0.11,41,1.95,42,1.327,43,3.025,44,3.025,45,3.025,46,1.551,47,3.025,48,2.525,49,1.031,50,3.025,51,0.015,52,0.021,53,0.015]],["title/modules/AppModule.html",[54,0.921,55,2.053]],["body/modules/AppModule.html",[1,2.54,2,1.312,3,0.206,4,0.179,5,0.179,13,0.032,22,0.657,26,0.33,27,2.623,28,1.787,39,0.206,40,0.078,51,0.011,52,0.016,53,0.011,54,1.139,55,3.858,56,0.862,57,0.862,58,1.026,59,1.026,60,0.862,61,1.889,62,1.026,63,1.787,64,1.787,65,1.787,66,2.892,67,2.892,68,2.892,69,2.892,70,2.623,71,1.561,72,1.026,73,1.026,74,2.14,75,1.887,76,2.14,77,1.241,78,2.14,79,1.026,80,2.14,81,2.14,82,1.38,83,0.939,84,2.14,85,1.026,86,2.14,87,1.026,88,2.14,89,1.026,90,2.14,91,2.14,92,1.787,93,1.787,94,1.787,95,2.14,96,2.14,97,2.14,98,1.787,99,2.14,100,2.14,101,2.14,102,2.14,103,2.14,104,2.14,105,2.14,106,2.14,107,2.14,108,2.14,109,2.14,110,2.14,111,2.14,112,2.14,113,2.14,114,2.14]],["title/injectables/AppService.html",[27,1.674,115,0.542]],["body/injectables/AppService.html",[3,0.388,4,0.336,5,0.336,7,0.686,8,1.875,13,0.031,15,0.985,21,1.493,22,0.443,26,0.621,27,2.66,39,0.388,40,0.146,46,1.493,48,4.844,49,1.726,51,0.02,52,0.025,53,0.02,115,0.861,116,1.493,117,3.365,118,4.031,119,4.031]],["title/modules/AuthModule.html",[54,0.921,66,1.846]],["body/modules/AuthModule.html",[3,0.25,4,0.217,5,0.217,13,0.032,22,0.621,26,0.4,30,1.366,34,2.873,39,0.25,40,0.094,51,0.013,52,0.019,53,0.013,54,1.278,56,1.047,57,1.047,58,1.246,59,1.246,60,1.047,61,2.118,62,2.118,66,3.506,70,2.816,71,1.803,72,1.246,73,1.246,75,2.18,98,2.17,120,2.17,121,2.599,122,2.17,123,2.17,124,3.105,125,3.105,126,2.599,127,2.17,128,2.599,129,2.599,130,2.599,131,1.887,132,1.676,133,2.17,134,2.599,135,2.599,136,2.599,137,1.887,138,2.599,139,1.887,140,2.17,141,2.599,142,2.599,143,2.599]],["title/injectables/AuthService.html",[34,1.527,115,0.542]],["body/injectables/AuthService.html",[3,0.238,4,0.206,5,0.206,7,0.421,8,1.343,9,2.31,10,3.026,13,0.032,15,1.05,17,1.73,18,1.464,19,1.73,21,1.343,22,0.472,26,0.381,34,1.738,39,0.238,40,0.09,42,1.591,46,1.591,49,1.795,51,0.021,52,0.018,53,0.012,115,0.617,116,0.916,131,1.794,144,2.063,145,3.625,146,1.738,147,2.471,148,2.767,149,5.439,150,2.471,151,0.963,152,3.625,153,2.471,154,3.048,155,3.625,156,4.729,157,2.471,158,2.337,159,1.738,160,2.471,161,2.337,162,3.117,163,1.593,164,2.471,165,2.471,166,1.794,167,2.471,168,2.063,169,2.063,170,2.471,171,2.471,172,2.471,173,2.471]],["title/classes/Cat.html",[40,0.116,89,1.527]],["body/classes/Cat.html",[3,0.316,4,0.273,5,0.273,7,0.558,12,2.569,13,0.031,15,1.311,22,0.36,39,0.316,40,0.119,49,1.967,51,0.016,52,0.022,53,0.016,89,2.121,151,1.202,174,1.9,175,2.737,176,2.325,177,3.635,178,3.635,179,2.903,180,3.635,181,4.28,182,3.279,183,3.279,184,2.325,185,3.635,186,3.279,187,3.279,188,2.38,189,1.571,190,3.279]],["title/interfaces/CatInterface.html",[191,2.053,192,1.846]],["body/interfaces/CatInterface.html",[3,0.356,4,0.308,5,0.308,7,0.628,13,0.03,39,0.356,49,2.121,51,0.018,52,0.024,53,0.018,151,1.26,176,2.515,177,4.078,178,4.078,179,3.256,180,4.078,184,2.791,191,2.38,192,2.774,193,3.692,194,3.082]],["title/controllers/CatsController.html",[0,1.283,77,1.846]],["body/controllers/CatsController.html",[0,0.712,2,0.712,3,0.17,4,0.148,5,0.148,7,0.301,8,1.04,9,2.508,12,2.077,13,0.032,15,1.06,17,1.601,18,1.649,19,1.601,20,1.476,21,1.606,22,0.551,23,1.284,24,1.476,26,0.272,36,1.284,37,1.025,39,0.17,40,0.064,41,1.14,42,0.776,46,1.606,51,0.009,52,0.014,53,0.009,77,1.627,79,0.848,89,0.848,151,0.629,159,2.538,179,2.303,184,1.835,192,1.025,195,1.476,196,1.284,197,1.476,198,2.343,199,3.317,200,2.343,201,2.343,202,2.343,203,1.476,204,2.995,205,2.807,206,1.769,207,1.769,208,1.769,209,1.769,210,2.533,211,1.809,212,1.769,213,3.974,214,1.769,215,2.807,216,1.769,217,1.769,218,2.807,219,1.769,220,1.769,221,1.769,222,2.807,223,1.476,224,2.343,225,2.343,226,1.476,227,1.476,228,1.284,229,2.807,230,2.343,231,1.769,232,2.807,233,2.807,234,2.807,235,1.769,236,1.476,237,1.476,238,1.476,239,1.769,240,1.769,241,1.769,242,1.769,243,1.769,244,2.807,245,1.769,246,2.343,247,1.769,248,1.769,249,1.769,250,1.769,251,1.769,252,1.769,253,1.769,254,1.769,255,1.769,256,1.769,257,1.769]],["title/modules/CatsModule.html",[54,0.921,67,1.846]],["body/modules/CatsModule.html",[2,1.372,3,0.328,4,0.284,5,0.284,13,0.031,22,0.623,26,0.525,39,0.328,40,0.124,51,0.017,52,0.022,53,0.017,54,1.476,56,1.372,57,1.372,58,1.632,59,1.632,60,1.372,61,2.175,62,1.632,67,3.38,71,2.175,72,1.632,73,1.632,75,1.974,77,2.631,79,2.718,82,2.195,83,1.494,89,1.632,226,2.843,228,2.472,258,2.843,259,2.843,260,3.406,261,3.406,262,3.406,263,3.406,264,3.406]],["title/injectables/CatsService.html",[79,1.527,115,0.542]],["body/injectables/CatsService.html",[3,0.166,4,0.144,5,0.144,7,0.294,8,1.02,9,2.397,13,0.032,15,1.116,17,1.725,18,1.46,19,1.725,21,1.586,22,0.501,26,0.266,39,0.166,40,0.063,42,1.208,46,1.586,49,1.556,51,0.009,52,0.014,53,0.009,79,1.319,83,0.757,89,2.052,115,0.468,116,0.639,146,1.319,151,0.96,159,2.519,161,1.774,162,1.998,163,2.526,179,1.595,184,1.447,189,0.827,192,2.271,197,2.866,198,2.297,199,3.574,200,2.297,201,2.297,202,2.297,203,2.297,204,3.046,211,1.112,224,1.44,225,1.44,227,1.44,228,1.252,246,2.297,265,1.44,266,1.725,267,2.844,268,1.725,269,1.725,270,1.725,271,2.752,272,1.725,273,2.752,274,1.725,275,2.752,276,1.725,277,1.252,278,1.725,279,1.998,280,2.752,281,2.752,282,1.725,283,2.752,284,1.725,285,2.752,286,1.725,287,2.752,288,1.725,289,1.725,290,1.725,291,1.725,292,1.725,293,1.725,294,1.725,295,1.725,296,1.725,297,1.725,298,1.725,299,1.725,300,1.725,301,1.725,302,1.725,303,1.725,304,1.725,305,1.725,306,1.725]],["title/classes/CreateCatDto.html",[40,0.116,204,1.846]],["body/classes/CreateCatDto.html",[3,0.275,4,0.238,5,0.238,7,0.486,12,2.422,13,0.032,15,1.235,22,0.441,37,1.654,39,0.275,40,0.146,49,1.885,51,0.014,52,0.02,53,0.014,151,1.133,174,1.654,176,2.113,177,3.378,178,3.378,179,2.698,180,3.378,184,2.656,204,2.33,211,3,307,4.446,308,2.381,309,4.019,310,4.217,311,2.853,312,2.853,313,2.853,314,2.853,315,2.853,316,5.526,317,2.853,318,4.019,319,2.853,320,4.019,321,2.381,322,4.019,323,4.019]],["title/classes/Hero.html",[40,0.116,87,1.527]],["body/classes/Hero.html",[3,0.336,4,0.291,5,0.291,7,0.594,12,2.477,13,0.031,15,1.263,18,1.762,22,0.383,39,0.336,40,0.127,49,1.573,51,0.017,52,0.023,53,0.017,87,2.211,151,1.159,174,2.023,176,2.425,181,4.149,184,2.889,185,3.751,188,2.533,189,1.673,211,3.33,324,2.913,325,5.167,326,3.49,327,3.49,328,3.49,329,3.49]],["title/controllers/HeroesController.html",[0,1.283,330,2.053]],["body/controllers/HeroesController.html",[0,1.427,2,1.427,3,0.341,4,0.296,5,0.296,13,0.032,18,1.208,22,0.631,26,0.546,36,2.572,37,2.054,39,0.341,40,0.129,51,0.017,52,0.023,53,0.017,87,2.233,151,0.794,196,2.572,210,2.572,230,2.957,236,2.957,237,2.957,238,2.957,330,3.003,331,2.957,332,3.543,333,4.659,334,2.572,335,2.572,336,2.449,337,2.957,338,3.543,339,3.543,340,3.543,341,3.543,342,3.543]],["title/modules/HeroesModule.html",[54,0.921,68,1.846]],["body/modules/HeroesModule.html",[2,1.817,3,0.325,4,0.281,5,0.281,13,0.031,22,0.621,26,0.52,39,0.325,40,0.122,51,0.017,52,0.022,53,0.017,54,1.469,56,1.359,57,1.359,58,1.617,59,1.617,60,1.359,61,2.435,62,1.617,68,3.371,71,2.161,72,1.617,73,1.617,75,1.955,82,2.174,83,1.48,87,1.617,330,3.274,335,2.448,336,3.057,337,2.816,343,2.816,344,2.816,345,3.373,346,3.373,347,3.373]],["title/injectables/HeroesService.html",[115,0.542,336,1.674]],["body/injectables/HeroesService.html",[3,0.354,4,0.306,5,0.306,13,0.032,15,0.898,17,1.48,18,1.253,19,1.48,22,0.616,26,0.566,39,0.354,40,0.133,51,0.018,52,0.024,53,0.018,83,1.612,87,1.76,115,0.812,116,1.361,146,1.76,189,1.76,277,2.666,334,2.666,335,2.666,336,2.507,348,3.066,349,3.074,350,5.297,351,3.673,352,3.673,353,4.769,354,3.673,355,3.673]],["title/injectables/JwtStrategy.html",[115,0.542,124,1.846]],["body/injectables/JwtStrategy.html",[3,0.306,4,0.265,5,0.265,7,0.54,8,1.604,9,2.161,13,0.032,15,1.058,17,1.279,18,1.083,19,1.279,21,1.176,22,0.581,26,0.489,30,1.669,39,0.306,40,0.115,46,1.176,51,0.016,52,0.021,53,0.016,115,0.737,116,1.176,124,2.509,132,2.046,133,2.65,137,2.305,140,2.65,146,2.361,151,0.712,158,2.046,168,2.65,310,2.65,349,2.046,356,2.65,357,3.613,358,3.175,359,4.329,360,3.175,361,3.175,362,2.65,363,2.305,364,2.65,365,2.65,366,2.65,367,3.175,368,3.175,369,3.175,370,3.175,371,2.305,372,3.175,373,3.175]],["title/injectables/LocalAuthGuard.html",[31,2.053,115,0.542]],["body/injectables/LocalAuthGuard.html",[3,0.412,4,0.357,5,0.357,13,0.031,22,0.577,26,0.659,29,3.569,30,2.248,31,3.384,39,0.412,40,0.155,51,0.021,52,0.026,53,0.021,115,0.894,116,1.584,349,2.756,374,3.569,375,3.569,376,4.276]],["title/injectables/LocalStrategy.html",[115,0.542,125,1.846]],["body/injectables/LocalStrategy.html",[3,0.259,4,0.224,5,0.224,7,0.458,8,1.428,9,1.977,13,0.032,15,0.942,17,1.553,18,1.314,19,1.553,21,0.996,22,0.572,23,3.571,26,0.414,30,1.413,34,2.496,39,0.259,40,0.098,41,1.733,42,1.18,46,0.996,49,1.848,51,0.013,52,0.019,53,0.013,115,0.656,116,0.996,125,2.234,127,2.245,146,1.289,151,0.864,154,2.903,158,2.484,159,1.847,162,1.952,163,1.733,166,3.571,279,1.952,349,1.733,357,3.217,362,2.245,363,1.952,364,2.245,365,2.245,366,2.245,377,2.245,378,2.689,379,5.581,380,2.689,381,3.854,382,2.689,383,2.245,384,3.854,385,2.245,386,2.689,387,2.689,388,2.689,389,2.689,390,2.689]],["title/classes/Photo.html",[40,0.116,85,1.527]],["body/classes/Photo.html",[3,0.36,4,0.311,5,0.311,7,0.635,12,2.31,13,0.031,15,1.178,22,0.41,39,0.36,40,0.135,49,1.924,51,0.018,52,0.024,53,0.018,85,2.31,151,1.081,174,2.163,176,2.533,181,3.874,185,3.874,188,2.708,189,1.788,371,3.874,391,3.115,392,5.337,393,3.731,394,3.731,395,3.731]],["title/controllers/PhotoController.html",[0,1.283,396,2.053]],["body/controllers/PhotoController.html",[0,1.472,2,1.472,3,0.352,4,0.305,5,0.305,7,0.622,8,1.761,12,1.751,13,0.032,15,0.893,21,1.354,22,0.58,26,0.563,39,0.352,40,0.133,41,2.355,42,1.603,46,1.354,51,0.018,52,0.023,53,0.018,85,2.278,159,2.278,196,2.652,396,3.064,397,3.05,398,4.671,399,3.654,400,2.777,401,3.05,402,2.652,403,3.654,404,3.654]],["title/modules/PhotoModule.html",[54,0.921,69,1.846]],["body/modules/PhotoModule.html",[2,1.817,3,0.325,4,0.281,5,0.281,13,0.031,22,0.621,26,0.52,39,0.325,40,0.122,51,0.017,52,0.022,53,0.017,54,1.469,56,1.359,57,1.359,58,1.617,59,1.617,60,1.359,61,2.435,62,1.617,69,3.371,71,2.161,72,1.617,73,1.617,75,1.955,82,2.174,83,1.48,85,1.617,396,3.274,400,3.057,401,2.816,402,2.448,405,2.816,406,2.816,407,3.373,408,3.373,409,3.373]],["title/injectables/PhotoService.html",[115,0.542,400,1.674]],["body/injectables/PhotoService.html",[3,0.317,4,0.275,5,0.275,7,0.561,8,1.644,9,2.203,13,0.032,15,1.085,17,1.327,18,1.123,19,1.327,21,1.22,22,0.59,26,0.507,39,0.317,40,0.119,42,1.445,46,1.22,51,0.016,52,0.022,53,0.016,83,1.445,85,1.579,115,0.755,116,1.22,146,2.127,151,0.739,159,2.127,161,2.123,163,2.123,189,1.579,267,3.899,277,2.391,398,4.483,400,2.333,402,2.391,410,2.75,411,3.294,412,3.294,413,4.438,414,3.294,415,3.294,416,3.294]],["title/modules/UsersModule.html",[54,0.921,70,1.674]],["body/modules/UsersModule.html",[3,0.341,4,0.296,5,0.296,13,0.031,22,0.512,26,0.546,39,0.341,40,0.129,51,0.017,52,0.023,53,0.017,54,1.505,56,1.427,57,1.427,58,1.698,59,1.698,60,1.427,61,2.495,62,2.495,70,3.159,71,2.233,72,1.698,73,1.698,148,3.32,417,2.957,418,2.957,419,2.957,420,3.543,421,3.543]],["title/injectables/UsersService.html",[115,0.542,148,1.674]],["body/injectables/UsersService.html",[3,0.275,4,0.238,5,0.238,7,0.486,8,1.489,9,2.042,13,0.032,15,1.138,17,1.149,18,0.973,19,1.149,21,1.057,22,0.313,26,0.439,39,0.387,40,0.103,42,2.042,46,1.057,49,1.587,51,0.014,52,0.02,53,0.014,115,0.684,116,1.057,139,2.071,146,2.231,148,2.113,151,1.044,154,3,158,3.433,159,1.927,161,3,166,3.378,169,2.381,176,2.113,371,3.378,422,2.071,423,4.654,424,4.019,425,4.019,426,4.019,427,2.853,428,2.853,429,2.381,430,2.853,431,2.853,432,2.853,433,2.853,434,2.853,435,2.853,436,2.853,437,2.853]],["title/coverage.html",[438,3.149]],["body/coverage.html",[0,1.948,1,1.669,5,0.216,6,2.162,13,0.031,27,1.361,31,1.669,34,1.241,40,0.175,51,0.013,52,0.019,53,0.013,60,1.043,77,1.501,79,1.241,85,1.241,87,1.241,89,1.241,115,0.98,117,2.162,124,1.501,125,1.501,132,1.669,144,2.162,148,1.361,151,0.581,175,2.162,191,1.669,192,1.501,194,2.162,195,2.162,204,1.501,265,2.162,279,1.88,307,2.162,308,2.162,324,2.162,330,1.669,331,2.162,336,1.361,348,2.162,356,2.162,374,2.162,375,2.162,377,2.162,391,2.162,396,1.669,397,2.162,400,1.361,410,2.162,422,1.88,438,1.88,439,2.59,440,2.59,441,2.59,442,6.289,443,4.835,444,4.41,445,2.162,446,2.59,447,4.835,448,4.835,449,4.41,450,2.59,451,2.59,452,2.162,453,2.59,454,2.59,455,2.59]],["title/dependencies.html",[57,1.542,456,2.665]],["body/dependencies.html",[13,0.032,26,0.482,30,1.646,37,1.816,40,0.156,51,0.015,52,0.021,53,0.015,57,1.262,83,1.375,92,2.615,93,2.615,131,2.274,137,2.274,189,2.056,223,3.58,321,2.615,334,3.113,363,3.55,383,2.615,385,2.615,457,4.891,458,3.132,459,3.132,460,3.132,461,3.132,462,3.132,463,3.132,464,4.289,465,3.132,466,4.289,467,3.132,468,3.132,469,3.132,470,4.289,471,3.132,472,3.132,473,3.132,474,3.132,475,3.132,476,3.132,477,3.132,478,3.132,479,3.132,480,3.132,481,3.132,482,3.132,483,3.132,484,3.132,485,3.132,486,3.132,487,3.132,488,3.132]],["title/miscellaneous/functions.html",[489,1.401,490,3.196]],["body/miscellaneous/functions.html",[7,0.806,13,0.028,51,0.023,52,0.028,53,0.023,60,2.392,452,3.954,489,2.49,490,3.954,491,4.737]],["title/index.html",[7,0.453,492,2.665,493,2.665]],["body/index.html",[4,0.249,13,0.031,51,0.015,52,0.02,53,0.015,94,2.493,210,2.167,267,2.167,438,2.167,494,2.986,495,2.986,496,4.15,497,2.986,498,2.986,499,2.986,500,2.986,501,2.986,502,2.986,503,2.986,504,2.986,505,2.986,506,4.769,507,2.986,508,2.986,509,2.986,510,5.751,511,2.986,512,2.986,513,2.986,514,5.607,515,2.986,516,2.986,517,4.15,518,2.986,519,2.986,520,2.986,521,2.986,522,4.15,523,4.15,524,2.986,525,2.986,526,2.986,527,4.15,528,4.15,529,2.986,530,2.986,531,2.986,532,2.986,533,2.986,534,2.493,535,2.986,536,2.986,537,2.986,538,2.986,539,2.986,540,2.986,541,2.986,542,2.986,543,2.986,544,2.986,545,2.986,546,2.986,547,2.986,548,2.986,549,2.986,550,2.986,551,2.986]],["title/modules.html",[56,1.748]],["body/modules.html",[13,0.025,51,0.02,52,0.025,53,0.02,55,2.644,56,1.652,66,2.377,67,2.377,68,2.377,69,2.377,70,2.156,534,5.115,552,6.128,553,6.128,554,6.128]],["title/overview.html",[555,3.622]],["body/overview.html",[2,1.036,13,0.031,27,2.308,34,2.639,51,0.013,52,0.018,53,0.013,54,0.743,55,3.922,56,1.036,57,1.036,58,1.232,59,1.232,60,1.036,61,1.232,62,1.232,63,2.146,64,2.146,65,2.146,66,3.467,67,2.966,68,2.966,69,2.966,70,2.894,71,1.788,72,1.232,73,1.232,79,2.105,116,0.952,120,2.146,122,2.146,123,2.146,124,2.546,125,2.546,148,2.894,174,1.49,191,1.657,258,2.146,259,2.146,336,2.308,343,2.146,344,2.146,400,2.308,405,2.146,406,2.146,417,2.146,418,2.146,419,2.146,429,2.146,555,2.146,556,2.571,557,3.731,558,2.571]],["title/miscellaneous/typealiases.html",[489,1.401,559,3.829]],["body/miscellaneous/typealiases.html",[7,0.806,13,0.028,51,0.023,52,0.028,53,0.023,151,1.062,154,3.6,422,3.439,489,2.49,560,4.737,561,4.737]],["title/miscellaneous/variables.html",[489,1.401,562,3.196]],["body/miscellaneous/variables.html",[7,0.76,13,0.031,51,0.022,52,0.027,53,0.022,132,3.475,139,3.242,151,1.002,445,3.728,489,2.348,562,3.728,563,4.466,564,4.466,565,4.466,566,4.466,567,4.466]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["1.0.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["2.17.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["3.0.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":557,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":556,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.0.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":558,"title":{},"body":{"overview.html":{}}}],["access_token",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["age:5",{"_index":302,"title":{},"body":{"injectables/CatsService.html":{}}}],["aliases",{"_index":560,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":535,"title":{},"body":{"index.html":{}}}],["angular",{"_index":505,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["apibody",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiheader",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{}}}],["apiparam",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":316,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiproperty()@isnotempty({message",{"_index":313,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiproperty({required",{"_index":309,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiquery",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["apisecurity",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["apisecurity('basic",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HeroesController.html":{}}}],["apitags('cats",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags('token",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags,apiheader",{"_index":338,"title":{},"body":{"controllers/HeroesController.html":{}}}],["app",{"_index":512,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":502,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":27,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{}}}],["auth.guard",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.guard.ts",{"_index":375,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('local",{"_index":376,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":544,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{}}}],["authservice",{"_index":34,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,private",{"_index":386,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["autoloadentities",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{}}}],["backers",{"_index":536,"title":{},"body":{"index.html":{}}}],["body",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed:'adsas",{"_index":303,"title":{},"body":{"injectables/CatsService.html":{}}}],["browse",{"_index":554,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":552,"title":{},"body":{"modules.html":{}}}],["building",{"_index":497,"title":{},"body":{"index.html":{}}}],["cat",{"_index":89,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto.ts",{"_index":308,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":317,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:16",{"_index":312,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:21",{"_index":311,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":315,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.entity",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["cat.menu_href",{"_index":286,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.menu_icon",{"_index":284,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.menu_id",{"_index":280,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.menu_text",{"_index":282,"title":{},"body":{"injectables/CatsService.html":{}}}],["catinterface",{"_index":192,"title":{"interfaces/CatInterface.html":{}},"body":{"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cats",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":261,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cat.entity",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.service",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":77,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":67,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":79,"title":{"injectables/CatsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["catsservice:catsservice",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["catupdate",{"_index":292,"title":{},"body":{"injectables/CatsService.html":{}}}],["catupdate.menu_href",{"_index":296,"title":{},"body":{"injectables/CatsService.html":{}}}],["catupdate.menu_icon",{"_index":295,"title":{},"body":{"injectables/CatsService.html":{}}}],["catupdate.menu_text",{"_index":294,"title":{},"body":{"injectables/CatsService.html":{}}}],["changeme",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["chris",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":40,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"classes/Photo.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"classes/Photo.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":258,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":259,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_heroesmodule",{"_index":343,"title":{},"body":{"modules/HeroesModule.html":{},"overview.html":{}}}],["cluster_heroesmodule_providers",{"_index":344,"title":{},"body":{"modules/HeroesModule.html":{},"overview.html":{}}}],["cluster_photomodule",{"_index":405,"title":{},"body":{"modules/PhotoModule.html":{},"overview.html":{}}}],["cluster_photomodule_providers",{"_index":406,"title":{},"body":{"modules/PhotoModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":417,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":418,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":419,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":181,"title":{},"body":{"classes/Cat.html":{},"classes/Hero.html":{},"classes/Photo.html":{}}}],["console.log(11",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(123",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(cat",{"_index":288,"title":{},"body":{"injectables/CatsService.html":{}}}],["console.log(createcatdto",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["console.log(id",{"_index":291,"title":{},"body":{"injectables/CatsService.html":{}}}],["console.log(menu_id",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{}}}],["const",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/LocalStrategy.html":{}}}],["constants",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(hero",{"_index":354,"title":{},"body":{"injectables/HeroesService.html":{}}}],["constructor(authservice",{"_index":378,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cats",{"_index":266,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(photorepository",{"_index":411,"title":{},"body":{"injectables/PhotoService.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{}}}],["constructor(public",{"_index":341,"title":{},"body":{"controllers/HeroesController.html":{}}}],["constructor(repo",{"_index":351,"title":{},"body":{"injectables/HeroesService.html":{}}}],["constructor(usersservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HeroesController.html":{},"controllers/PhotoController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HeroesController.html":{},"controllers/PhotoController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('heroes",{"_index":340,"title":{},"body":{"controllers/HeroesController.html":{}}}],["controller('photo",{"_index":403,"title":{},"body":{"controllers/PhotoController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"overview.html":{}}}],["controllers:[catscontroller",{"_index":263,"title":{},"body":{"modules/CatsModule.html":{}}}],["coverage",{"_index":438,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":304,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["createcatdto",{"_index":204,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createcatdto.menu_href",{"_index":287,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcatdto.menu_icon",{"_index":285,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcatdto.menu_id",{"_index":281,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcatdto.menu_text",{"_index":283,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcatdto:createcatdto",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["crud",{"_index":333,"title":{},"body":{"controllers/HeroesController.html":{}}}],["database:'test",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{}}}],["default",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{},"index.html":{}}}],["development",{"_index":513,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["e2e",{"_index":524,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":498,"title":{},"body":{"index.html":{}}}],["entities:[__dirname",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":188,"title":{},"body":{"classes/Cat.html":{},"classes/Hero.html":{},"classes/Photo.html":{}}}],["entity('app_user",{"_index":395,"title":{},"body":{"classes/Photo.html":{}}}],["entity('hero",{"_index":329,"title":{},"body":{"classes/Hero.html":{}}}],["entity('menu_usual",{"_index":190,"title":{},"body":{"classes/Cat.html":{}}}],["entity{.ts,.js",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["expiresin",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{},"dependencies.html":{}}}],["extends",{"_index":349,"title":{},"body":{"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":310,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":398,"title":{},"body":{"controllers/PhotoController.html":{},"injectables/PhotoService.html":{}}}],["findallcat",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(username",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonecat",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findonecat(@param('menu_id",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{}}}],["findonecat(menu_id",{"_index":271,"title":{},"body":{"injectables/CatsService.html":{}}}],["findonecat(params",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":496,"title":{},"body":{"index.html":{}}}],["function",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":490,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/findone/:menu_id",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('/findone/:menu_id')@apiparam({name",{"_index":209,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('/update/:menu_id",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":492,"title":{"index.html":{}},"body":{}}],["graphql",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["grow",{"_index":531,"title":{},"body":{"index.html":{}}}],["guess",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["heavily",{"_index":503,"title":{},"body":{"index.html":{}}}],["here",{"_index":541,"title":{},"body":{"index.html":{}}}],["hero",{"_index":87,"title":{"classes/Hero.html":{}},"body":{"modules/AppModule.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"coverage.html":{}}}],["hero.entity",{"_index":335,"title":{},"body":{"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{}}}],["hero/hero.entity",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["hero/heroes.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["heroes",{"_index":332,"title":{},"body":{"controllers/HeroesController.html":{}}}],["heroes.controller",{"_index":346,"title":{},"body":{"modules/HeroesModule.html":{}}}],["heroes.service",{"_index":337,"title":{},"body":{"controllers/HeroesController.html":{},"modules/HeroesModule.html":{}}}],["heroescontroller",{"_index":330,"title":{"controllers/HeroesController.html":{}},"body":{"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"coverage.html":{}}}],["heroesmodule",{"_index":68,"title":{"modules/HeroesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeroesModule.html":{},"modules.html":{},"overview.html":{}}}],["heroesservice",{"_index":336,"title":{"injectables/HeroesService.html":{}},"body":{"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"coverage.html":{},"overview.html":{}}}],["host:'localhost",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":548,"title":{},"body":{"index.html":{}}}],["id",{"_index":211,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{}}}],["identifier",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["id不能为空'})@isstring({message",{"_index":314,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["ignoreexpiration",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":115,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":277,"title":{},"body":{"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/PhotoService.html":{}}}],["injectrepository(cat",{"_index":278,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(photo",{"_index":415,"title":{},"body":{"injectables/PhotoService.html":{}}}],["inspired",{"_index":504,"title":{},"body":{"index.html":{}}}],["installation",{"_index":509,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":511,"title":{},"body":{"index.html":{}}}],["interface",{"_index":191,"title":{"interfaces/CatInterface.html":{}},"body":{"interfaces/CatInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":193,"title":{},"body":{"interfaces/CatInterface.html":{}}}],["interfaces/cat.interface",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["isnotempty",{"_index":318,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isnumber",{"_index":319,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":320,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["john",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":124,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":545,"title":{},"body":{"index.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":551,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":528,"title":{},"body":{"index.html":{}}}],["local",{"_index":383,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":31,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":125,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["maria",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu_href",{"_index":177,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"classes/CreateCatDto.html":{}}}],["menu_icon",{"_index":178,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"classes/CreateCatDto.html":{}}}],["menu_id",{"_index":179,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["menu_text",{"_index":180,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"classes/CreateCatDto.html":{}}}],["message",{"_index":322,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["metadata",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":489,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":527,"title":{},"body":{"index.html":{}}}],["mode",{"_index":517,"title":{},"body":{"index.html":{}}}],["model",{"_index":339,"title":{},"body":{"controllers/HeroesController.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":379,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":540,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":546,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["name:'张三1",{"_index":301,"title":{},"body":{"injectables/CatsService.html":{}}}],["nest",{"_index":506,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":550,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":385,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HeroesController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":334,"title":{},"body":{"controllers/HeroesController.html":{},"injectables/HeroesService.html":{},"dependencies.html":{}}}],["new",{"_index":279,"title":{},"body":{"injectables/CatsService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":495,"title":{},"body":{"index.html":{}}}],["npm",{"_index":510,"title":{},"body":{"index.html":{}}}],["null",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":184,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{}}}],["number,createcatdto",{"_index":290,"title":{},"body":{"injectables/CatsService.html":{}}}],["object",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":529,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":555,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":456,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":213,"title":{},"body":{"controllers/CatsController.html":{}}}],["pass",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback:true",{"_index":387,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["password:'root",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":392,"title":{},"body":{"classes/Photo.html":{}}}],["photo",{"_index":85,"title":{"classes/Photo.html":{}},"body":{"modules/AppModule.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"coverage.html":{}}}],["photo.controller",{"_index":408,"title":{},"body":{"modules/PhotoModule.html":{}}}],["photo.entity",{"_index":402,"title":{},"body":{"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{}}}],["photo.service",{"_index":401,"title":{},"body":{"controllers/PhotoController.html":{},"modules/PhotoModule.html":{}}}],["photo/photo.entity",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["photo/photo.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["photocontroller",{"_index":396,"title":{"controllers/PhotoController.html":{}},"body":{"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"coverage.html":{}}}],["photomodule",{"_index":69,"title":{"modules/PhotoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PhotoModule.html":{},"modules.html":{},"overview.html":{}}}],["photorepository",{"_index":413,"title":{},"body":{"injectables/PhotoService.html":{}}}],["photoservice",{"_index":400,"title":{"injectables/PhotoService.html":{}},"body":{"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":538,"title":{},"body":{"index.html":{}}}],["port:3306",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["post('/add",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('/removecat/:menu_id",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('auth/login",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["power",{"_index":325,"title":{},"body":{"classes/Hero.html":{}}}],["prefix",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{},"controllers/PhotoController.html":{}}}],["primarygeneratedcolumn",{"_index":185,"title":{},"body":{"classes/Cat.html":{},"classes/Hero.html":{},"classes/Photo.html":{}}}],["private",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":519,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":494,"title":{},"body":{"index.html":{}}}],["project",{"_index":530,"title":{},"body":{"index.html":{}}}],["promise",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":176,"title":{},"body":{"classes/Cat.html":{},"interfaces/CatInterface.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"classes/Photo.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers:[catsservice",{"_index":264,"title":{},"body":{"modules/CatsModule.html":{}}}],["public",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{}}}],["read",{"_index":539,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["removecat",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["removecat(@param",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["removecat(menu_id",{"_index":273,"title":{},"body":{"injectables/CatsService.html":{}}}],["removecat(params",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["repo",{"_index":353,"title":{},"body":{"injectables/HeroesService.html":{}}}],["repository",{"_index":267,"title":{},"body":{"injectables/CatsService.html":{},"injectables/PhotoService.html":{},"index.html":{}}}],["req",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["request",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/LocalStrategy.html":{}}}],["request,username",{"_index":388,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["required",{"_index":323,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["reset",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PhotoController.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":514,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":499,"title":{},"body":{"index.html":{}}}],["schema",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["secret",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":500,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":342,"title":{},"body":{"controllers/HeroesController.html":{}}}],["side",{"_index":501,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"modules/HeroesModule.html":{},"injectables/HeroesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"controllers/PhotoController.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":533,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../users.service.ts",{"_index":561,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":374,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":377,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:15",{"_index":382,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":380,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/cats/cat.entity.ts",{"_index":175,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/cat.entity.ts:12",{"_index":183,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cat.entity.ts:15",{"_index":182,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cat.entity.ts:6",{"_index":186,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cat.entity.ts:9",{"_index":187,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cats.controller.ts",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:27",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:37",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:44",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:51",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:56",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":260,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":265,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:15",{"_index":269,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:27",{"_index":276,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:40",{"_index":270,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:44",{"_index":272,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:48",{"_index":274,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:9",{"_index":268,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":307,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":194,"title":{},"body":{"interfaces/CatInterface.html":{},"coverage.html":{}}}],["src/hero/hero.entity.ts",{"_index":324,"title":{},"body":{"classes/Hero.html":{},"coverage.html":{}}}],["src/hero/hero.entity.ts:11",{"_index":328,"title":{},"body":{"classes/Hero.html":{}}}],["src/hero/hero.entity.ts:5",{"_index":326,"title":{},"body":{"classes/Hero.html":{}}}],["src/hero/hero.entity.ts:8",{"_index":327,"title":{},"body":{"classes/Hero.html":{}}}],["src/hero/heroes.controller.ts",{"_index":331,"title":{},"body":{"controllers/HeroesController.html":{},"coverage.html":{}}}],["src/hero/heroes.module.ts",{"_index":345,"title":{},"body":{"modules/HeroesModule.html":{}}}],["src/hero/heroes.service.ts",{"_index":348,"title":{},"body":{"injectables/HeroesService.html":{},"coverage.html":{}}}],["src/hero/heroes.service.ts:7",{"_index":352,"title":{},"body":{"injectables/HeroesService.html":{}}}],["src/main.ts",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/photo/photo.controller.ts",{"_index":397,"title":{},"body":{"controllers/PhotoController.html":{},"coverage.html":{}}}],["src/photo/photo.controller.ts:10",{"_index":399,"title":{},"body":{"controllers/PhotoController.html":{}}}],["src/photo/photo.entity.ts",{"_index":391,"title":{},"body":{"classes/Photo.html":{},"coverage.html":{}}}],["src/photo/photo.entity.ts:6",{"_index":394,"title":{},"body":{"classes/Photo.html":{}}}],["src/photo/photo.entity.ts:9",{"_index":393,"title":{},"body":{"classes/Photo.html":{}}}],["src/photo/photo.module.ts",{"_index":407,"title":{},"body":{"modules/PhotoModule.html":{}}}],["src/photo/photo.service.ts",{"_index":410,"title":{},"body":{"injectables/PhotoService.html":{},"coverage.html":{}}}],["src/photo/photo.service.ts:13",{"_index":414,"title":{},"body":{"injectables/PhotoService.html":{}}}],["src/photo/photo.service.ts:7",{"_index":412,"title":{},"body":{"injectables/PhotoService.html":{}}}],["src/users/users.module.ts",{"_index":420,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:29",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":515,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":518,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":520,"title":{},"body":{"index.html":{}}}],["started",{"_index":493,"title":{"index.html":{}},"body":{}}],["starter",{"_index":508,"title":{},"body":{"index.html":{}}}],["statements",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stay",{"_index":542,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(repo",{"_index":355,"title":{},"body":{"injectables/HeroesService.html":{}}}],["support",{"_index":534,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":553,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["synchronize:true",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":523,"title":{},"body":{"index.html":{}}}],["test123",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["test:covsupport",{"_index":526,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":525,"title":{},"body":{"index.html":{}}}],["tests",{"_index":522,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":532,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":389,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cats",{"_index":306,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.delete(menu_id",{"_index":300,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.find",{"_index":298,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.findone(createcatdto.menu_id",{"_index":293,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.findone(menu_id",{"_index":299,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":305,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.save(cat",{"_index":289,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.save(catupdate",{"_index":297,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findallcat",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findonecat(params",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.removecat(params.menu_id",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(menu_id,createcatdto",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.photorepository.find",{"_index":416,"title":{},"body":{"injectables/PhotoService.html":{}}}],["this.photoservice.findall",{"_index":404,"title":{},"body":{"controllers/PhotoController.html":{}}}],["this.users",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.find(user",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findone(username",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["token",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HeroesController.html":{}}}],["tools",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":543,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":549,"title":{},"body":{"index.html":{}}}],["type",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cat.html":{},"interfaces/CatInterface.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/Hero.html":{},"controllers/HeroesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Photo.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type:'mysql",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["typealiases",{"_index":559,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":189,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/Hero.html":{},"injectables/HeroesService.html":{},"classes/Photo.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["typeormcrudservice",{"_index":350,"title":{},"body":{"injectables/HeroesService.html":{}}}],["typeormmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":262,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([hero",{"_index":347,"title":{},"body":{"modules/HeroesModule.html":{}}}],["typeormmodule.forfeature([photo",{"_index":409,"title":{},"body":{"modules/PhotoModule.html":{}}}],["typeormmodule.forroot",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":507,"title":{},"body":{"index.html":{}}}],["ui",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":384,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":521,"title":{},"body":{"index.html":{}}}],["update",{"_index":202,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["update(@param('menu_id",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(id",{"_index":275,"title":{},"body":{"injectables/CatsService.html":{}}}],["update(menu_id",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["user.password",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Photo.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["username:'root",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":421,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":70,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":148,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":381,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":321,"title":{},"body":{"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":562,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":516,"title":{},"body":{"index.html":{}}}],["website",{"_index":547,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":537,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/HeroesModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, Post, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard'\nimport { AuthService } from './auth/auth.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('token获取')\n@Controller()\nexport class AppController {\n  constructor(private readonly authService: AuthService) {}\n  \n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n      return this.authService.login(req.user);\n  }\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nHeroesModule\n\nHeroesModule\n\nAppModule -->\n\nHeroesModule->AppModule\n\n\n\n\n\nPhotoModule\n\nPhotoModule\n\nAppModule -->\n\nPhotoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            HeroesModule\n                        \n                        \n                            PhotoModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsController } from './cats/cats.controller';\nimport { CatsService } from './cats/cats.service';\nimport { CatsModule } from './cats/cats.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PhotoModule } from './photo/photo.module';\nimport { Photo } from './photo/photo.entity';\nimport { Hero } from './hero/hero.entity';\nimport { Cat } from './cats/cat.entity';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { HeroesModule } from './hero/heroes.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n\t  ServeStaticModule.forRoot({\n\t\trootPath: join(__dirname, '..', 'public'),\n\t  }),\n\t  TypeOrmModule.forRoot({\n\t\t  type:'mysql',\n\t\t  host:'localhost',\n\t\t  port:3306,\n\t\t  database:'test',\n\t\t  username:'root',\n\t\t  password:'root',\n\t\t  entities:[__dirname + '/**/*.entity{.ts,.js}'],\n\t\t  // autoLoadEntities: true,\n\t\t  synchronize:true,\n\t  }),\n\t  CatsModule,\n\t  PhotoModule,\n\t  HeroesModule,\n\t  AuthModule,\n\t  UsersModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'test123!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n  \n  async login(user: any) {\n\tconst payload = { username: user.username, sub: user.userId };\n\treturn {\n\t  access_token: this.jwtService.sign(payload),\n\t};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menu_href\n                            \n                            \n                                menu_icon\n                            \n                            \n                                menu_id\n                            \n                            \n                                menu_text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cat.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cat.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cat.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cat.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('menu_usual')\nexport class Cat {\n\t@PrimaryGeneratedColumn()\n\tmenu_id: number;\n\t\n\t@Column()\n\tmenu_text: string;\n\t\n\t@Column()\n\tmenu_icon: string;\n\t\n\t@Column()\n\tmenu_href: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CatInterface.html":{"url":"interfaces/CatInterface.html","title":"interface - CatInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CatInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        menu_href\n                                \n                                \n                                        menu_icon\n                                \n                                \n                                        menu_id\n                                \n                                \n                                        menu_text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menu_href\n                                    \n                                \n                                \n                                    \n                                        menu_href:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_icon\n                                    \n                                \n                                \n                                    \n                                        menu_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_id\n                                    \n                                \n                                \n                                    \n                                        menu_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_text\n                                    \n                                \n                                \n                                    \n                                        menu_text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CatInterface {\n\tmenu_id: number;\n    menu_text: string;\n    menu_href: string;\n\tmenu_icon: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllCat\n                            \n                            \n                                    Async\n                                findOneCat\n                            \n                            \n                                    Async\n                                removeCat\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneCat(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/findOne/:menu_id')@ApiParam({name: 'menu_id', description: '根据ID查询'})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCat(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/removeCat/:menu_id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(menu_id: number, createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/update/:menu_id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Req, Body, Param, Query } from '@nestjs/common';\nimport { Request } from 'express';\n// import { CreateCatDto } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { CatInterface } from './interfaces/cat.interface';\nimport { Cat } from './cat.entity';\nimport { CreateCatDto } from './dto/create-cat.dto'\nimport { ApiBody, ApiTags, ApiHeader, ApiSecurity, ApiBearerAuth, ApiParam, ApiQuery } from '@nestjs/swagger';\n\n@ApiTags('cats')\n// @ApiHeader({\n//   name: 'Authorization',\n//   description: 'Auth token'\n// })\n// @ApiSecurity('basic')\n@ApiBearerAuth()\n@Controller('cats')\nexport class CatsController {\n\tconstructor(private readonly catsService:CatsService){}\n\t\n\t@Post('/add')\n\t// @ApiBody({\n\t// \tschema:{\n\t\t\t\n\t// \t}\n\t// })\n\tasync create(@Body() createCatDto:CreateCatDto): Promise {\n\t\tconsole.log(11)\n\t\tconsole.log(createCatDto)\n\t\treturn this.catsService.create(createCatDto);\n\t}\n\t\n\t@Get('/update/:menu_id')\n\t// @ApiQuery({\n\t// \tname:''\n\t// })\n\tasync update(@Param('menu_id') menu_id: number, @Query() createCatDto:CreateCatDto): Promise {\n\t\tconsole.log(createCatDto)\n\t\tconsole.log(menu_id)\n\t\treturn this.catsService.update(menu_id,createCatDto);\n\t}\n\t\n\t@Get()\n\tasync findAllCat(): Promise {\n\t\tconsole.log(123)\n\t\treturn this.catsService.findAllCat();\n\t}\n\t\n\t@Get('/findOne/:menu_id')\n\t@ApiParam({ name: 'menu_id', description: '根据ID查询' })\n\tasync findOneCat(@Param('menu_id') params): Promise {\n\t\treturn this.catsService.findOneCat(params);\n\t}\n\t\n\t@Post('/removeCat/:menu_id')\n\tasync removeCat(@Param() params): Promise {\n\t\treturn this.catsService.removeCat(params.menu_id)\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Cat } from './cat.entity';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([Cat])],\n\tcontrollers:[CatsController],\n\tproviders:[CatsService]\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAllCat\n                            \n                            \n                                    Async\n                                findOneCat\n                            \n                            \n                                    Async\n                                removeCat\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cats: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cats\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCat()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneCat(menu_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeCat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCat(menu_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, CreateCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    CreateCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Cat } from './cat.entity';\nimport { CatInterface } from './interfaces/cat.interface';\nimport { CreateCatDto } from './dto/create-cat.dto'\n\n@Injectable()\nexport class CatsService {\n\tconstructor(\n\t    @InjectRepository(Cat)\n\t    private readonly cats: Repository,\n\t) {}\n\t\n\tcreate(createCatDto: CreateCatDto): Promise {\n\t\tconsole.log(createCatDto)\n\t\tconst cat = new Cat();\n\t\tcat.menu_id = createCatDto.menu_id;\n\t\tcat.menu_text = createCatDto.menu_text;\n\t\tcat.menu_icon = createCatDto.menu_icon;\n\t\tcat.menu_href = createCatDto.menu_href;\n\t\tconsole.log(cat)\n\t\t\n\t\treturn this.cats.save(cat);\n\t}\n\t\n\tasync update(id: number,CreateCatDto: CreateCatDto): Promise {\n\t\tconsole.log(id)\n\t\tconsole.log(CreateCatDto)\n\t\tlet catUpdate = await this.cats.findOne(CreateCatDto.menu_id)\n\t\t// const cat = new Cat();\n\t\t// cat.menu_id = CreateCatDto.menu_id;\n\t\tcatUpdate.menu_text = CreateCatDto.menu_text;\n\t\tcatUpdate.menu_icon = CreateCatDto.menu_icon;\n\t\tcatUpdate.menu_href = CreateCatDto.menu_href;\n\t\t\n\t\treturn this.cats.save(catUpdate);\n\t}\n\n\tasync findAllCat(): Promise {\n\t    return await this.cats.find();\n\t}\n\t\n\tasync findOneCat(menu_id: string): Promise {\n\t    return await this.cats.findOne(menu_id);\n\t}\n\t\n\tasync removeCat(menu_id: string): Promise {\n\t    await this.cats.delete(menu_id);\n\t}\n\t\n\t// private readonly cats: CatInterface[] = [{\n\t// \tname:'张三1',\n\t// \tage:5,\n\t// \tbreed:'adsas'\n\t// }];\n\t\n\t// create(cat: CatInterface) {\n\t// \tthis.cats.push(cat);\n\t// }\n\t\n\t// findAllCat(): CatInterface[] {\n\t// \treturn this.cats;\n\t// }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menu_href\n                            \n                            \n                                menu_icon\n                            \n                            \n                                menu_id\n                            \n                            \n                                menu_text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty({message: '菜单ID不能为空'})@IsString({message: '菜单ID Number 类型'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu_text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateCatDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: '菜单ID不能为空' })\n  @IsString({ message: '菜单ID Number 类型' })\n  menu_id: number;\n  \n  @ApiProperty()\n  menu_text: string;\n\t  \n  @ApiProperty({\n\t  required: false,\n  })\n  menu_icon: string;\n  \n  @ApiProperty({\n  \t  required: false,\n    })\n  menu_href: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hero.html":{"url":"classes/Hero.html","title":"class - Hero","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                power\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/hero.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/hero.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            power\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/hero.entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n@Entity('hero')\nexport class Hero {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  power: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HeroesController.html":{"url":"controllers/HeroesController.html","title":"controller - HeroesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HeroesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/heroes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                heroes\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Crud } from '@nestjsx/crud';\nimport { Hero } from './hero.entity';\nimport { HeroesService } from './heroes.service';\nimport { ApiTags,ApiHeader } from '@nestjs/swagger';\n\n@Crud({\n  model: {\n    type: Hero,\n  },\n})\n@ApiTags('增删查改')\n@ApiHeader({\n  name: 'Authorization',\n  description: 'Auth token'\n})\n@Controller('heroes')\nexport class HeroesController {\n  constructor(public service: HeroesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeroesModule.html":{"url":"modules/HeroesModule.html","title":"module - HeroesModule","body":"\n                   \n\n\n\n\n    Modules\n    HeroesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeroesModule\n\n\n\ncluster_HeroesModule_providers\n\n\n\n\nHeroesService\n\nHeroesService\n\n\n\nHeroesModule\n\nHeroesModule\n\nHeroesModule -->\n\nHeroesService->HeroesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/hero/heroes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HeroesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HeroesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { Hero } from './hero.entity';\nimport { HeroesService } from './heroes.service';\nimport { HeroesController } from './heroes.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Hero])],\n  providers: [HeroesService],\n  controllers: [HeroesController],\n})\nexport class HeroesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeroesService.html":{"url":"injectables/HeroesService.html","title":"injectable - HeroesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HeroesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/heroes.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo)\n                    \n                \n                        \n                            \n                                Defined in src/hero/heroes.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { Hero } from './hero.entity';\n\n@Injectable()\nexport class HeroesService extends TypeOrmCrudService {\n  constructor(@InjectRepository(Hero) repo) {\n    super(repo);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException, Request } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ModuleRef } from '@nestjs/core'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService,private moduleRef: ModuleRef) {\n    super({\n\t  passReqToCallback:true\n\t});\n  }\n\n  async validate(request: Request,username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Photo.html":{"url":"classes/Photo.html","title":"class - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photo/photo.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                phone\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/photo/photo.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/photo/photo.entity.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('app_user')\nexport class Photo {\n  @PrimaryGeneratedColumn()\n  userId: string;\n\n  @Column()\n  phone: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PhotoController.html":{"url":"controllers/PhotoController.html","title":"controller - PhotoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PhotoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photo/photo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                photo\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/photo/photo.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get} from '@nestjs/common';\nimport { PhotoService } from './photo.service';\nimport { Photo } from './photo.entity';\n\n@Controller('photo')\nexport class PhotoController {\n\tconstructor(private readonly photoService: PhotoService) {}\n\n\t@Get()\n\tfindAll(): Promise {\n\t\treturn this.photoService.findAll();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhotoModule.html":{"url":"modules/PhotoModule.html","title":"module - PhotoModule","body":"\n                   \n\n\n\n\n    Modules\n    PhotoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PhotoModule\n\n\n\ncluster_PhotoModule_providers\n\n\n\n\nPhotoService\n\nPhotoService\n\n\n\nPhotoModule\n\nPhotoModule\n\nPhotoModule -->\n\nPhotoService->PhotoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/photo/photo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PhotoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PhotoController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PhotoController } from './photo.controller';\nimport { PhotoService } from './photo.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Photo } from './photo.entity';\n\n@Module({\n\timports: [TypeOrmModule.forFeature([Photo])],\n    controllers: [PhotoController],\n    providers: [PhotoService]\n})\nexport class PhotoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoService.html":{"url":"injectables/PhotoService.html","title":"injectable - PhotoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PhotoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/photo/photo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(photoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/photo/photo.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/photo/photo.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\nexport class PhotoService {\n\tconstructor(\n\t    @InjectRepository(Photo)\n\t    private readonly photoRepository: Repository,\n\t) {}\n\t\n\tasync findAll(): Promise {\n\t    return await this.photoRepository.find();\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = any;\n\n@Injectable()\nexport class UsersService {\n  private readonly users: User[];\n\n  constructor() {\n    this.users = [\n      {\n        userId: 1,\n        username: 'john',\n        password: 'changeme',\n      },\n      {\n        userId: 2,\n        username: 'chris',\n        password: 'secret',\n      },\n      {\n        userId: 3,\n        username: 'maria',\n        password: 'guess',\n      },\n    ];\n  }\n\n  async findOne(username: string): Promise {\n    return this.users.find(user => user.username === username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            CatInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/hero/hero.entity.ts\n            \n            class\n            Hero\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/hero/heroes.controller.ts\n            \n            controller\n            HeroesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/hero/heroes.service.ts\n            \n            injectable\n            HeroesService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/photo/photo.controller.ts\n            \n            controller\n            PhotoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/photo/photo.entity.ts\n            \n            class\n            Photo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/photo/photo.service.ts\n            \n            injectable\n            PhotoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/graphql : ^7.3.7\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/serve-static : ^1.0.2\n        \n            @nestjs/swagger : ^4.1.2\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @nestjsx/crud : ^4.4.1\n        \n            @nestjsx/crud-typeorm : ^4.4.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            graphql : ^15.0.0\n        \n            graphql-tools : ^5.0.0\n        \n            mysql : ^2.17.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.2\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeroesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhotoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_HeroesModule\n\n\n\ncluster_HeroesModule_providers\n\n\n\ncluster_PhotoModule\n\n\n\ncluster_PhotoModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nHeroesModule\n\nHeroesModule\n\nAppModule -->\n\nHeroesModule->AppModule\n\n\n\n\n\nPhotoModule\n\nPhotoModule\n\nAppModule -->\n\nPhotoModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nHeroesService\n\nHeroesService\n\nHeroesModule -->\n\nHeroesService->HeroesModule\n\n\n\n\n\nPhotoService\n\nPhotoService\n\nPhotoModule -->\n\nPhotoService->PhotoModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'secretKey',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
